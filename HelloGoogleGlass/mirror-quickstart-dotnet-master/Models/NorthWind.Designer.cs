//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace MirrorQuickstart.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NORTHWNDEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NORTHWNDEntities object using the connection string found in the 'NORTHWNDEntities' section of the application configuration file.
        /// </summary>
        public NORTHWNDEntities() : base("name=NORTHWNDEntities", "NORTHWNDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NORTHWNDEntities object.
        /// </summary>
        public NORTHWNDEntities(string connectionString) : base(connectionString, "NORTHWNDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NORTHWNDEntities object.
        /// </summary>
        public NORTHWNDEntities(EntityConnection connection) : base(connection, "NORTHWNDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoredCredential> StoredCredentials
        {
            get
            {
                if ((_StoredCredentials == null))
                {
                    _StoredCredentials = base.CreateObjectSet<StoredCredential>("StoredCredentials");
                }
                return _StoredCredentials;
            }
        }
        private ObjectSet<StoredCredential> _StoredCredentials;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoredCredentials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoredCredentials(StoredCredential storedCredential)
        {
            base.AddObject("StoredCredentials", storedCredential);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NORTHWNDModel", Name="StoredCredential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoredCredential : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoredCredential object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="accessToken">Initial value of the AccessToken property.</param>
        /// <param name="refreshToken">Initial value of the RefreshToken property.</param>
        public static StoredCredential CreateStoredCredential(global::System.String userId, global::System.String accessToken, global::System.String refreshToken)
        {
            StoredCredential storedCredential = new StoredCredential();
            storedCredential.UserId = userId;
            storedCredential.AccessToken = accessToken;
            storedCredential.RefreshToken = refreshToken;
            return storedCredential;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccessToken
        {
            get
            {
                return _AccessToken;
            }
            set
            {
                OnAccessTokenChanging(value);
                ReportPropertyChanging("AccessToken");
                _AccessToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccessToken");
                OnAccessTokenChanged();
            }
        }
        private global::System.String _AccessToken;
        partial void OnAccessTokenChanging(global::System.String value);
        partial void OnAccessTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RefreshToken
        {
            get
            {
                return _RefreshToken;
            }
            set
            {
                OnRefreshTokenChanging(value);
                ReportPropertyChanging("RefreshToken");
                _RefreshToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RefreshToken");
                OnRefreshTokenChanged();
            }
        }
        private global::System.String _RefreshToken;
        partial void OnRefreshTokenChanging(global::System.String value);
        partial void OnRefreshTokenChanged();

        #endregion

    
    }

    #endregion

    
}
